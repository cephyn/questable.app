// Mocks generated by Mockito 5.4.6 from annotations
// in quest_cards/test/game_system_mapper_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:cloud_firestore/cloud_firestore.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:quest_cards/src/models/standard_game_system.dart' as _i5;
import 'package:quest_cards/src/services/game_system_service.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCollectionReference_0<T extends Object?> extends _i1.SmartFake
    implements _i2.CollectionReference<T> {
  _FakeCollectionReference_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GameSystemService].
///
/// See the documentation for Mockito's code generation for more information.
class MockGameSystemService extends _i1.Mock implements _i3.GameSystemService {
  MockGameSystemService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.CollectionReference<Map<String, dynamic>> get gameSystems =>
      (super.noSuchMethod(
        Invocation.getter(#gameSystems),
        returnValue: _FakeCollectionReference_0<Map<String, dynamic>>(
          this,
          Invocation.getter(#gameSystems),
        ),
      ) as _i2.CollectionReference<Map<String, dynamic>>);

  @override
  _i2.CollectionReference<Map<String, dynamic>> get questCards =>
      (super.noSuchMethod(
        Invocation.getter(#questCards),
        returnValue: _FakeCollectionReference_0<Map<String, dynamic>>(
          this,
          Invocation.getter(#questCards),
        ),
      ) as _i2.CollectionReference<Map<String, dynamic>>);

  @override
  _i4.Future<List<_i5.StandardGameSystem>> getAllGameSystems() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllGameSystems,
          [],
        ),
        returnValue: _i4.Future<List<_i5.StandardGameSystem>>.value(
            <_i5.StandardGameSystem>[]),
      ) as _i4.Future<List<_i5.StandardGameSystem>>);

  @override
  _i4.Future<_i5.StandardGameSystem?> getGameSystemById(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGameSystemById,
          [id],
        ),
        returnValue: _i4.Future<_i5.StandardGameSystem?>.value(),
      ) as _i4.Future<_i5.StandardGameSystem?>);

  @override
  _i4.Future<_i5.StandardGameSystem?> findGameSystemByName(String? name) =>
      (super.noSuchMethod(
        Invocation.method(
          #findGameSystemByName,
          [name],
        ),
        returnValue: _i4.Future<_i5.StandardGameSystem?>.value(),
      ) as _i4.Future<_i5.StandardGameSystem?>);

  @override
  _i4.Future<String> createGameSystem(_i5.StandardGameSystem? gameSystem) =>
      (super.noSuchMethod(
        Invocation.method(
          #createGameSystem,
          [gameSystem],
        ),
        returnValue: _i4.Future<String>.value(_i6.dummyValue<String>(
          this,
          Invocation.method(
            #createGameSystem,
            [gameSystem],
          ),
        )),
      ) as _i4.Future<String>);

  @override
  _i4.Future<void> updateGameSystem(_i5.StandardGameSystem? gameSystem) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateGameSystem,
          [gameSystem],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteGameSystem(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteGameSystem,
          [id],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<Map<String, int>> getUniqueGameSystemValues() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUniqueGameSystemValues,
          [],
        ),
        returnValue: _i4.Future<Map<String, int>>.value(<String, int>{}),
      ) as _i4.Future<Map<String, int>>);

  @override
  _i4.Future<Map<String, List<Map<String, dynamic>>>>
      generateGameSystemVariationsReport() => (super.noSuchMethod(
            Invocation.method(
              #generateGameSystemVariationsReport,
              [],
            ),
            returnValue:
                _i4.Future<Map<String, List<Map<String, dynamic>>>>.value(
                    <String, List<Map<String, dynamic>>>{}),
          ) as _i4.Future<Map<String, List<Map<String, dynamic>>>>);

  @override
  _i4.Future<void> updateQuestCardGameSystem(
    String? questCardId,
    String? originalGameSystem,
    _i5.StandardGameSystem? standardSystem,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateQuestCardGameSystem,
          [
            questCardId,
            originalGameSystem,
            standardSystem,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
